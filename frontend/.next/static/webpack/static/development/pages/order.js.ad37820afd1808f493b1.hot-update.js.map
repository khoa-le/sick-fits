{"version":3,"file":"static/webpack/static/development/pages/order.js.ad37820afd1808f493b1.hot-update.js","sources":["webpack:///./components/Order.js","webpack:///./components/styles/OrderStyles.js"],"sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {Query} from 'react-apollo';\nimport {format} from 'date-fns';\nimport Head from 'next/head';\nimport gql from 'graphql-tag';\nimport formatMoney from '../lib/formatMoney';\nimport Error from './ErrorMessage';\nimport OrderStyles from './styles/OrderStyles';\n\n\nconst SINGLE_ORDER_QUERY = gql`\n    query SINGLE_ORDER_QUERY($id: ID!){\n        order(id: $id){\n            id\n            charge\n            total\n            createdAt\n            user{\n                id\n            }\n            items{\n                id\n                title\n                description\n                price\n                image\n\n            }\n        }\n    }\n`;\n\nclass Order extends Component {\n    render() {\n        return (\n            <Query query={SINGLE_ORDER_QUERY} variables={{id: this.props.id}}>\n                {({data, error, loading}) => {\n                    console.log(data);\n                    if (error) return <Error error={error}></Error>\n                    if (loading) return <p>Loading....</p>;\n                    const order = data.order;\n                    return (\n\n                        <OrderStyles>\n                            <Head>\n                                <title>Sick Fits - Order {order.id}</title>\n                            </Head>\n                            <p>\n                                <span>Order ID:</span>\n                                <span> {this.props.id}</span>\n                            </p>\n                            <p>\n                                <span>Charge:</span>\n                                <span> {order.charge}</span>\n                            </p>\n                            <p>\n                                <span>Date:</span>\n                                <span> {format(order.createdAt, \"MMMM d, YYYY h:mm A\")}</span>\n                            </p>\n                            <p>\n                                <span>Order Total:</span>\n                                <span> {formatMoney(order.total)}</span>\n                            </p>\n                            <p>\n                                <span>Item Count Total:</span>\n                                <span> {(order.items.length)}</span>\n                            </p>\n                            <div className=\"items\">\n                                {order.items.map(item => (\n                                    <div className=\"order-item\" key={item.id}>\n                                        <img src={item.image} alt={item.title}/>\n                                        <div className=\"item-details\">\n                                            <h2>{item.title}</h2>\n                                            <p>Qty: {item.quantity}</p>\n                                            <p>Each: {formatMoney(item.price)}</p>\n                                            <p>Subtotal: {formatMoney(item.price * item.quantity)}</p>\n                                            <p>{item.description}</p>\n                                        </div>\n                                    </div>\n                                ))}\n                            </div>\n                        </OrderStyles>\n                    )\n                }}\n            </Query>\n        );\n    }\n}\n\nexport default Order;","import styled from 'styled-components';\n\nconst OrderStyles = styled.div`\n  max-width: 1000px;\n  margin: 0 auto;\n  border: 1px solid ${props => props.theme.offWhite};\n  box-shadow: ${props => props.theme.bs};\n  padding: 2rem;\n  border-top: 10px solid red;\n  & > p {\n    display: grid;\n    grid-template-columns: 1fr 5fr;\n    margin: 0;\n    border-bottom: 1px solid ${props => props.theme.offWhite};\n    span {\n      padding: 1rem;\n      &:first-child {\n        font-weight: 900;\n        text-align: right;\n      }\n    }\n  }\n  .order-item {\n    border-bottom: 1px solid ${props => props.theme.offWhite};\n    display: grid;\n    grid-template-columns: 300px 1fr;\n    align-items: center;\n    grid-gap: 2rem;\n    margin: 2rem 0;\n    padding-bottom: 2rem;\n    img {\n      width: 100%;\n      height: 100%;\n      object-fit: cover;\n    }\n  }\n`;\nexport default OrderStyles;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAqeA;AAGA;;;;AAtDA;AACA;AAwDA;;;;;;;;;;;;;;;AC1FA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAOA;AAAA;AAUA;AAAA;AAcA;;;;A","sourceRoot":""}