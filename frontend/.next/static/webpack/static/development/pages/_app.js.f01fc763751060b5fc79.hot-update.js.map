{"version":3,"file":"static/webpack/static/development/pages/_app.js.f01fc763751060b5fc79.hot-update.js","sources":["webpack:///./components/TakeMyMoney.js"],"sourcesContent":["import React, {Component} from 'react';\nimport StripeCheckOut from 'react-stripe-checkout';\nimport {Mutation} from 'react-apollo';\nimport Router from 'next/router';\nimport NProgress from 'nprogress';\nimport PropTypes from 'prop-types';\nimport gql from 'graphql-tag';\nimport calcTotalPrice from '../lib/calcTotalPrice';\nimport Error from './ErrorMessage';\nimport User, {CURRENT_USER_QUERY} from \"./User\";\n\nconst CREATE_ORDER_MUTATION = gql`\n    mutation createOrder($token: String!){\n        createOrder(token: $token){\n            id\n            charge\n            total\n            items{\n                id\n                title\n            }\n        }\n    }\n`;\n\nfunction totalItems(cart) {\n    return cart.reduce((tally, cartItem) => tally + cartItem.quantity, 0);\n}\n\nclass TakeMyMoney extends Component {\n    onToken = async (res, createOrder) => {\n        NProgress.start()\n        console.log('On token called');\n        console.log(res);\n        const order = await createOrder({\n            variables: {\n                token: res.id,\n            }\n        }).catch(err => {\n            alert(err.message);\n        });\n\n        Router.push({\n            pathname: \"/order\",\n            query: {id: order.data.createOrder.id},\n\n        })\n    };\n\n    render() {\n        return (\n            <User>\n                {({data: {me}}) =>\n                    <Mutation mutation={CREATE_ORDER_MUTATION}\n                              refetchQueries={[{query: CURRENT_USER_QUERY}]}>\n                        {(createOrder) => (\n                            <StripeCheckOut\n                                amount={calcTotalPrice(me.cart)}\n                                name=\"Sick Fits\" description={`Order of ${totalItems(me.cart)} items!`}\n                                image={me.cart.length && me.cart[0].item && me.cart[0].item.image}\n                                stripeKey=\"pk_test_syOz6frFphNKsZTcK48AXgeT\"\n                                currency=\"USD\"\n                                email={me.email}\n                                token={res => this.onToken(res, createOrder)}\n                            >{this.props.children}</StripeCheckOut>\n                        )}\n                    </Mutation>\n\n                }\n            </User>\n        );\n    }\n}\n\nexport default TakeMyMoney;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAaA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAKA;AACA;AADA;AADA;AAKA;AACA;AACA;AAXA;AAIA;AAQA;AACA;AACA;AAAA;AAAA;AAFA;AACA;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;AAkBA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAHA;AAmBA;;;;AA1CA;AACA;AA4CA;;;;A","sourceRoot":""}